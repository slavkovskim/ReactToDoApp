{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirch\\\\Documents\\\\Mirko proekti\\\\React projects\\\\todo_app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Notes from './components/Notes';\nimport './App.css';\nimport { isTSIndexedAccessType } from \"@babel/types\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = event => {\n      if (event.key === 'Enter') {}\n    };\n\n    this.state = {\n      noteText: '',\n      notes: []\n    };\n  }\n\n  updateNoteText(noteText) {\n    this.setState({\n      noteText: noteText.target.value\n    });\n  }\n\n  addNote() {\n    if (this.state.noteText === '') {\n      return;\n    }\n\n    let notesArr = this.state.notes;\n    notesArr.push(this.state.noteText);\n    this.setState({\n      noteText: ''\n    });\n    this.textInput.focus();\n  }\n\n  deleteNote(index) {\n    let notesArr = this.state.notes;\n    notesArr.splice(index, 1); //this removes the note from the note array\n\n    this.setState({\n      notes: notesArr\n    });\n  }\n\n  render() {\n    let notes = this.state.notes.map((val, key) => {\n      return React.createElement(Notes, {\n        key: key,\n        text: val,\n        deleteMethod: () => this.deleteNote(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"To-Do Application\"), notes, React.createElement(\"div\", {\n      className: \"btn\",\n      onClick: this.addNote.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"input\", {\n      type: \"textbox\",\n      ref: input => {\n        this.textInput = input;\n      },\n      className: \"textInput\",\n      value: this.state.noteText,\n      onChange: noteText => this.updateNoteText(noteText),\n      onKeyPress: this.handleKeyPress.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\mirch\\Documents\\Mirko proekti\\React projects\\todo_app\\src\\App.js"],"names":["React","Component","Notes","isTSIndexedAccessType","App","constructor","props","handleKeyPress","event","key","state","noteText","notes","updateNoteText","setState","target","value","addNote","notesArr","push","textInput","focus","deleteNote","index","splice","render","map","val","bind","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,SAAQC,qBAAR,QAAoC,cAApC;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACxBI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAuBlBC,cAvBkB,GAuBAC,KAAD,IAAW;AACxB,UAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B,CAE1B;AACJ,KA3BiB;;AAEd,SAAKC,KAAL,GAAW;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAAX;AAIH;;AAEDC,EAAAA,cAAc,CAACF,QAAD,EAAU;AACpB,SAAKG,QAAL,CAAc;AAACH,MAAAA,QAAQ,EAAEA,QAAQ,CAACI,MAAT,CAAgBC;AAA3B,KAAd;AAEH;;AAEDC,EAAAA,OAAO,GAAE;AACL,QAAG,KAAKP,KAAL,CAAWC,QAAX,KAAwB,EAA3B,EAA8B;AAC1B;AACH;;AACD,QAAIO,QAAQ,GAAG,KAAKR,KAAL,CAAWE,KAA1B;AACAM,IAAAA,QAAQ,CAACC,IAAT,CAAc,KAAKT,KAAL,CAAWC,QAAzB;AACA,SAAKG,QAAL,CAAc;AAAEH,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACA,SAAKS,SAAL,CAAeC,KAAf;AACH;;AASDC,EAAAA,UAAU,CAACC,KAAD,EAAO;AACb,QAAIL,QAAQ,GAAG,KAAKR,KAAL,CAAWE,KAA1B;AACAM,IAAAA,QAAQ,CAACM,MAAT,CAAgBD,KAAhB,EAAuB,CAAvB,EAFa,CAEc;;AAC3B,SAAKT,QAAL,CAAc;AAAEF,MAAAA,KAAK,EAAEM;AAAT,KAAd;AACH;;AAEDO,EAAAA,MAAM,GAAG;AAEL,QAAIb,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAX,CAAiBc,GAAjB,CAAqB,CAACC,GAAD,EAAMlB,GAAN,KAAY;AACzC,aAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,GAAZ;AAAiB,QAAA,IAAI,EAAEkB,GAAvB;AACN,QAAA,YAAY,EAAG,MAAK,KAAKL,UAAL,CAAgBb,GAAhB,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEC,KAHO,CAAZ;AAIA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFN,EAGKG,KAHL,EAKM;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,OAAO,EAAE,KAAKK,OAAL,CAAaW,IAAb,CAAkB,IAAlB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALN,EAOM;AAAO,MAAA,IAAI,EAAC,SAAZ;AACI,MAAA,GAAG,EAAIC,KAAD,IAAS;AAAC,aAAKT,SAAL,GAAiBS,KAAjB;AAAuB,OAD3C;AAEI,MAAA,SAAS,EAAC,WAFd;AAGO,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWC,QAHzB;AAIO,MAAA,QAAQ,EAAEA,QAAQ,IAAI,KAAKE,cAAL,CAAoBF,QAApB,CAJ7B;AAKO,MAAA,UAAU,EAAE,KAAKJ,cAAL,CAAoBqB,IAApB,CAAyB,IAAzB,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPN,CADF;AAiBH;;AA5DuB;;AA+D5B,eAAexB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Notes from './components/Notes';\nimport './App.css';\nimport {isTSIndexedAccessType} from \"@babel/types\";\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            noteText: '',\n            notes: [],\n        }\n    }\n\n    updateNoteText(noteText){\n        this.setState({noteText: noteText.target.value})\n\n    }\n\n    addNote(){\n        if(this.state.noteText === ''){\n            return\n        }\n        let notesArr = this.state.notes;\n        notesArr.push(this.state.noteText);\n        this.setState({ noteText: ''});\n        this.textInput.focus();\n    }\n\n    handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n\n        }\n    }\n\n\n    deleteNote(index){\n        let notesArr = this.state.notes;\n        notesArr.splice(index, 1); //this removes the note from the note array\n        this.setState({ notes: notesArr })\n    }\n\n    render() {\n\n        let notes = this.state.notes.map((val, key)=>{\n            return <Notes key={key} text={val}\n             deleteMethod={ ()=> this.deleteNote(key)}  />\n            })\n        return (\n          <div className=\"container\">\n\n                <div className=\"header\">To-Do Application</div>\n              {notes}\n\n                <div className=\"btn\" onClick={this.addNote.bind(this)}>+</div>\n\n                <input type=\"textbox\"\n                    ref={((input)=>{this.textInput = input})}\n                    className=\"textInput\"\n                       value={this.state.noteText}\n                       onChange={noteText => this.updateNoteText(noteText)}\n                       onKeyPress={this.handleKeyPress.bind(this)}\n                />\n          </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}